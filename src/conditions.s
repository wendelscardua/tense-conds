;
; File generated by cc65 v 2.19 - Git 884f72637
;
	.fopt		compiler,"cc65 v 2.19 - Git 884f72637"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "src/conditions.c", 1184, 1664641167
	.dbg		file, "src/conditions.h", 1235, 1664640981
	.dbg		file, "src/subrand.h", 147, 1664622739
	.dbg		file, "src/globals.h", 543, 1664622739
	.dbg		sym, "temp", "00", extern, "_temp"
	.dbg		sym, "j", "00", extern, "_j"
	.exportzp	_num_conditions
	.export		_condition_row
	.export		_condition_column
	.export		_condition_seconds
	.export		_condition_frames
	.export		_condition_type
	.export		_init_conditions
	.export		_update_condition_pool
	.importzp	_temp
	.importzp	_j
	.export		_num_conditions_in_pool
	.export		_i_cond
	.export		_j_cond
	.export		_condition_pool
	.export		_unlocked
	.export		_unlockables

.segment	"RODATA"

_unlockables:
	.byte	$01
	.byte	$02
	.byte	$02
	.res	1,$00
	.byte	$02
	.res	1,$00

.segment	"BSS"

.segment	"ZEROPAGE"
_num_conditions:
	.res	1,$00
.segment	"BSS"
_condition_row:
	.res	16,$00
_condition_column:
	.res	16,$00
_condition_seconds:
	.res	16,$00
_condition_frames:
	.res	16,$00
_condition_type:
	.res	16,$00
.segment	"ZEROPAGE"
_num_conditions_in_pool:
	.res	1,$00
_i_cond:
	.res	1,$00
_j_cond:
	.res	1,$00
.segment	"BSS"
_condition_pool:
	.res	2,$00
_unlocked:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ init_conditions (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_conditions: near

	.dbg	func, "init_conditions", "00", extern, "_init_conditions"

.segment	"CODE"

;
; num_conditions = 0;
;
	.dbg	line, "src/conditions.c", 30
	lda     #$00
	sta     _num_conditions
;
; num_conditions_in_pool = 0;
;
	.dbg	line, "src/conditions.c", 31
	sta     _num_conditions_in_pool
;
; }
;
	.dbg	line, "src/conditions.c", 32
	rts

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ update_condition_pool (enum $anon-enum-0001 condition)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_condition_pool: near

	.dbg	func, "update_condition_pool", "00", extern, "_update_condition_pool"
	.dbg	sym, "condition", "00", auto, 0

.segment	"CODE"

;
; void update_condition_pool(condition_t condition) {
;
	.dbg	line, "src/conditions.c", 34
	jsr     pusha
;
; if (unlocked[condition]) return;
;
	.dbg	line, "src/conditions.c", 35
	ldy     #$00
	lda     (sp),y
	tay
	lda     _unlocked,y
	bne     L0006
;
; unlocked[condition] = 1;
;
	.dbg	line, "src/conditions.c", 36
	tay
	lda     (sp),y
	tay
	lda     #$01
	sta     _unlocked,y
;
; for(i_cond = 0; (temp = unlockables[condition][i_cond]) != CondTotal; i_cond++) {
;
	.dbg	line, "src/conditions.c", 37
	lda     #$00
	sta     _i_cond
L0005:	ldx     #$00
	lda     (sp,x)
	asl     a
	bcc     L0013
	inx
	clc
L0013:	adc     #<(_unlockables)
	sta     ptr1
	txa
	adc     #>(_unlockables)
	sta     ptr1+1
	ldy     _i_cond
	lda     (ptr1),y
	sta     _temp
	cmp     #$02
	beq     L0006
;
; for(j_cond = 0; j < num_conditions_in_pool; j++) {
;
	.dbg	line, "src/conditions.c", 38
	lda     #$00
	sta     _j_cond
L0014:	lda     _j
	cmp     _num_conditions_in_pool
	bcs     L0015
;
; if (condition_pool[j_cond] == temp) break;
;
	.dbg	line, "src/conditions.c", 39
	ldy     _j_cond
	lda     _condition_pool,y
	cmp     _temp
	beq     L0015
;
; for(j_cond = 0; j < num_conditions_in_pool; j++) {
;
	.dbg	line, "src/conditions.c", 38
	inc     _j
	jmp     L0014
;
; if (j == num_conditions_in_pool) {
;
	.dbg	line, "src/conditions.c", 41
L0015:	lda     _j
	cmp     _num_conditions_in_pool
	bne     L0016
;
; condition_pool[num_conditions_in_pool] = temp;
;
	.dbg	line, "src/conditions.c", 42
	ldy     _num_conditions_in_pool
	lda     _temp
	sta     _condition_pool,y
;
; num_conditions_in_pool++;
;
	.dbg	line, "src/conditions.c", 43
	inc     _num_conditions_in_pool
;
; for(i_cond = 0; (temp = unlockables[condition][i_cond]) != CondTotal; i_cond++) {
;
	.dbg	line, "src/conditions.c", 37
L0016:	inc     _i_cond
	jmp     L0005
;
; }
;
	.dbg	line, "src/conditions.c", 46
L0006:	jmp     incsp1

	.dbg	line
.endproc

